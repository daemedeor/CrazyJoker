extends ../layout

block content
  #table.clearfix.mdl-grid
    div#middle-of-table
      #deck.card(data-decktype="deck")

      #discard.card(data-decktype="discard")

    #me.clearfix
      .dealer
      .hand#me-hand(data-decktype="playerhand")
  
  #overlay
    .wrapper
      a#start-button.button(href="#") Start Game

      #shareRoom
        label(for="url") Room URL
        div(data-room="#{share}", id="room") #{shareURL}
  
  #await
    .wrapper
      #fountainTextG
        #fountainTextG_1.fountainTextG L
        #fountainTextG_2.fountainTextG o
        #fountainTextG_3.fountainTextG a
        #fountainTextG_4.fountainTextG d
        #fountainTextG_5.fountainTextG i
        #fountainTextG_6.fountainTextG n
        #fountainTextG_7.fountainTextG g
        #fountainTextG_8.fountainTextG .
        #fountainTextG_9.fountainTextG .
        #fountainTextG_10.fountainTextG .

block headerStyles
  link(rel="stylesheet", href="/css/dragula.min.css")
  link(rel="stylesheet", href="/css/jquery.fancybox.css")

block headerScripts
  script(src="/js/dragula.min.js")
  script(src="/js/jquery.fancybox.js")

block footerScripts

  script(src='/socket.io/socket.io.js')
  script(src='/js/frontEndLogic.js')

  script.
    $(function(){

      IO = {
        init: function(){
          IO.socket = io.connect();
          IO.bindEvents();
        },

        bindEvents: function(){
          IO.socket.on('connected', IO.connected);
          IO.socket.on('goToLobby', IO.kickout);
          IO.socket.on('handSetUp', App.handSetup);
          IO.socket.on('setPlayer', App.setPlayer);
        },
        
        kickout: kickout,
        connected: connected,

      };

      App = {
        
        //elements of the game
        draggableElements: [".hand", "#deck", "#discard"],
        currentDeckObject: $("#deck"),
        myHand: $("#me"),
        roomID: $("#room").data("room"),
        loading: $("#await"),
        overlay: $("#overlay"),
        startButton: $("#start-button"),
        fromHand: '',
        referencedElement: '',
        dragndrop: null,

        //functions registered to the app
        registerDragEvents: null,
        waiting: null,
        joinRoom: null,
        pullCard: null,
        drag: null,
        drop: null,
        stopDragging: null,
        startGame: null,
        newRound: null,
        handSetup: null,
        setPlayer: null,

        //functions that should remain defined on the table
        init: function() {

          App.overlay.show();

          var stringOfElements = App.draggableElements.join(",")
              , htmlToPassToDraggable = $(stringOfElements).toArray()
              , dragndrop;
          
          dragndrop = App.dragndrop = dragula(htmlToPassToDraggable);
          
          App.registerEvents();
          App.registerDragEvents(dragndrop);

          App.startButton.click(function(e){
            e.preventDefault();
            App.startGame();
          });
        },

        registerEvents: function() {

          //drag and drop activities
          App.registerDragEvents = registerDragEvents;
          App.drag = drag;
          App.drop = drop;
          App.stopDragging = dragStop;
          
          //activities relating to room state
          App.waiting = waiting;
          App.joinRoom = joinRoom;
          App.startGame = startGame;
          //App.newRound = newRound;
          
          //activities relating to a person
          App.pullCard = pullCard;
          App.setPlayer = setPlayer;
          App.handSetup = handSetup;

        }
      }

      IO.init();

      function kickout() {
        window.location = "/lobby";
      }

      function connected() {
        App.init();
      }
    });

  
